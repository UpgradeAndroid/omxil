AC_INIT(configure.in)
AM_INIT_AUTOMAKE(libomxil-B, 0.3.2)
AC_PROG_CC
AM_PROG_LIBTOOL
AC_PROG_INSTALL

CFLAGS="${CFLAGS=} -Wall -g"

# Check if Video Frame buffer header file is present
AC_CHECK_HEADER(linux/fb.h, [with_framebuffer=true], [with_framebuffer=false])
AM_CONDITIONAL(WITH_FBDEV_LIBRARY, test x$with_framebuffer = xtrue)

# Check if Alsa sound library is present
AC_CHECK_LIB(asound, snd_pcm_plugin_init, [with_alsalibrary=true], [with_alsalibrary=false])
AC_CHECK_HEADER(alsa/asoundlib.h, [], [with_alsalibrary=false])
AM_CONDITIONAL(WITH_ALSALIBRARY, test x$with_alsalibrary = xtrue)

#Check for ffmpeg library existence
AC_CHECK_LIB(avcodec, avcodec_decode_audio, [with_ffmpeglibrary=true], [with_ffmpeglibrary=false])
AC_CHECK_HEADER(ffmpeg/avcodec.h, [], [with_ffmpeglibrary=false])
AC_CHECK_HEADER(ffmpeg/avformat.h, [], [with_ffmpeglibrary=false])
AC_CHECK_HEADER(ffmpeg/avutil.h, [], [with_ffmpeglibrary=false])
AM_CONDITIONAL(WITH_FFMPEGLIBRARY, test x$with_ffmpeglibrary = xtrue)

#Check for ffmpeg library existence
AC_CHECK_LIB(avcodec, avcodec_decode_audio2, [with_ffmpeglibrary_2=true], [with_ffmpeglibrary_2=false])
AC_CHECK_HEADER(ffmpeg/avcodec.h, [], [with_ffmpeglibrary_2=false])
AC_CHECK_HEADER(ffmpeg/avformat.h, [], [with_ffmpeglibrary_2=false])
AC_CHECK_HEADER(ffmpeg/avutil.h, [], [with_ffmpeglibrary_2=false])
AM_CONDITIONAL(WITH_FFMPEGLIBRARY_2, test x$with_ffmpeglibrary_2 = xtrue)

#Check for vorbis library existence
AC_CHECK_LIB(vorbis, ogg_sync_init, [with_vorbislibrary=true], [with_vorbislibrary=false])
AC_CHECK_HEADER(vorbis/codec.h, [], [with_vorbislibrary=false])
AM_CONDITIONAL(WITH_VORBISLIBRARY, test x$with_vorbislibrary = xtrue)

#Check for mad components dependencies
AC_CHECK_LIB(mad, mad_header_decode, [with_madlibrary=true], [with_madlibrary=false])
AC_CHECK_HEADER(mad.h, [], [with_madlibrary=false])
AC_CHECK_HEADER(id3tag.h, [], [with_madlibrary=false])
AM_CONDITIONAL(WITH_MADLIBRARY, test x$with_madlibrary = xtrue)


#Check whether ffmpeg components have been requested
AC_ARG_ENABLE(ffmpegcomponents,
  AC_HELP_STRING([--disable-ffmpegcomponents], [whether to disable ffmpeg components compilation]),
  [case "${enableval}" in
    yes) with_ffmpegcomponents=true ;;
    no)  with_ffmpegcomponents=false ;;
    *) AC_MSG_ERROR([bad value ${enableval} for --enable-ffmpegcomponents]) ;;
  esac],
  [with_ffmpegcomponents=true]) dnl default
AM_CONDITIONAL(WITH_FFMPEGCOMPONENTS, test x$with_ffmpegcomponents = xtrue && test x$with_ffmpeglibrary = xtrue)
AM_CONDITIONAL(WITH_FFMPEGCOMPONENTS_2, test x$with_ffmpegcomponents = xtrue && test x$with_ffmpeglibrary_2 = xtrue)

#Check whether mad components have been requested
AC_ARG_ENABLE(madcomponents,
  AC_HELP_STRING([--disable-madcomponents], [whether to disable mad components compilation]),
  [case "${enableval}" in
    yes) with_madcomponents=true ;;
    no)  with_madcomponents=false ;;
    *) AC_MSG_ERROR([bad value ${enableval} for --enable-madcomponents]) ;;
  esac],
  [with_madcomponents=true]) dnl default
AM_CONDITIONAL(WITH_MADCOMPONENTS, test x$with_madcomponents = xtrue && test x$with_madlibrary = xtrue)


#Check whether vorbis components have been requested
AC_ARG_ENABLE(vorbiscomponents,
  AC_HELP_STRING([--disable-vorbiscomponents], [whether to disable vorbis components compilation]),
  [case "${enableval}" in
    yes) with_vorbiscomponents=true ;;
    no)  with_vorbiscomponents=false ;;
    *) AC_MSG_ERROR([bad value ${enableval} for --enable-vorbiscomponents]) ;;
  esac],
  [with_vorbiscomponents=true]) dnl default
AM_CONDITIONAL(WITH_VORBISCOMPONENTS, test x$with_vorbiscomponents = xtrue && test x$with_vorbislibrary = xtrue)


#Check whether volume component has been requested
AC_ARG_ENABLE(audioeffects,
  AC_HELP_STRING([--disable-audioeffects], [whether to disable the audio effects components compilation]),
  [case "${enableval}" in
    yes) with_audioeffects=true ;;
    no)  with_audioeffects=false ;;
    *) AC_MSG_ERROR([bad value ${enableval} for --enable-audioeffects]) ;;
  esac],
  [with_audioeffects=true]) dnl default
 AM_CONDITIONAL(WITH_AUDIOEFFECTS, test x$with_audioeffects = xtrue)


#Check whether video sink on frame buffer has been requested
AC_ARG_ENABLE(fbdev_videosink,
  AC_HELP_STRING([--disable-fbvideosink], [whether to disable the frame buffer video sink]),
  [case "${enableval}" in
    yes) with_fbdev_videosink=true ;;
    no)  with_fbdev_videosink=false ;;
    *) AC_MSG_ERROR([bad value ${enableval} for --enable-fbvideosink]) ;;
  esac],
  [with_fbdev_videosink=true]) dnl default
 AM_CONDITIONAL(WITH_FBDEV_VIDEOSINK, test x$with_fbdev_videosink = xtrue && test x$with_framebuffer = xtrue)

#Check whether alsa sink has been requested
AC_ARG_ENABLE(alsasink,
  AC_HELP_STRING([--disable-alsasink], [whether to disable the alsa sink]),
  [case "${enableval}" in
    yes) with_alsasink=true ;;
    no)  with_alsasink=false ;;
    *) AC_MSG_ERROR([bad value ${enableval} for --enable-alsasink]) ;;
  esac],
  [with_alsasink=true]) dnl default
 AM_CONDITIONAL(WITH_ALSASINK, test x$with_alsasink = xtrue && test x$with_alsalibrary = xtrue)

AC_OUTPUT([
	Makefile		\
	libomxil.pc		\
	include/Makefile        \
	src/Makefile		\
	src/base/Makefile		\
	src/components/Makefile	\
	src/components/alsa/Makefile	\
	src/components/ffmpeg/Makefile	\
	src/components/mad/Makefile	\
	src/components/vorbis/Makefile	\
	src/components/filereader/Makefile  \
	src/components/fbdev/Makefile  \
	src/components/audio_effects/Makefile \
	test/Makefile		\
	test/components/Makefile	\
	test/components/audio/Makefile	\
	test/components/video/Makefile  \
	test/components/audio_effects/Makefile  
])
